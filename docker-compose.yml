services:
  consul:
    image: hashicorp/consul:1.19.0
    container_name: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: agent -server -bootstrap -ui -client=0.0.0.0
    networks:
      - ecommerce-network
    volumes:
      - consul-data:/consul/data
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service-db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=user_service_db
    ports:
      - "5432:5432"
    volumes:
      - user-service-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    depends_on:
      user-service-db:
        condition: service_healthy
      consul:
        condition: service_healthy
    env_file:
      - ./services/user-service/.env
    networks:
      - ecommerce-network

  product-service-db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=product_service_db
    ports:
      - "5433:5432"
    volumes:
      - product-service-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    ports:
      - "50052:50052"
    depends_on:
      product-service-db:
        condition: service_healthy
      consul:
        condition: service_healthy
    env_file:
      - ./services/product-service/.env
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "ping", "-c", "1", "product-service"]
      interval: 10s
      timeout: 5s
      retries: 5

  cart-service-db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cart_service_db
    ports:
      - "5434:5432"
    volumes:
      - cart-service-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

  cart-service:
    build:
      context: ./services/cart-service
      dockerfile: Dockerfile
    ports:
      - "50053:50053"
    depends_on:
      cart-service-db:
        condition: service_healthy
      consul:
        condition: service_healthy
      product-service:
        condition: service_healthy
    env_file:
      - ./services/cart-service/.env
    networks:
      - ecommerce-network

  order-service-db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=order_service_db
    ports:
      - "5435:5432"
    volumes:
      - order-service-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    ports:
      - "50054:50054"
    depends_on:
      order-service-db:
        condition: service_healthy
      consul:
        condition: service_healthy
      product-service:
        condition: service_healthy
    env_file:
      - ./services/order-service/.env
    networks:
      - ecommerce-network

volumes:
  user-service-db-data:
  product-service-db-data:
  cart-service-db-data:
  order-service-db-data:
  consul-data:

networks:
  ecommerce-network:
    driver: bridge
